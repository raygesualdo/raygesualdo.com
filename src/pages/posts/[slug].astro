---
import { getCollection, getEntry } from 'astro:content'
import Layout from '../../layouts/Layout.astro'
import PageTitle from '../../components/PageTitle.astro'
import { filterPostCollection, generateSocialImages, getPostTitle } from '../../utils'
import Image from '../../components/Image.astro'
import ArticleMeta from '../../components/ArticleMeta.astro'
import Markdown from '../../components/Markdown.astro'
import SEO from '../../components/SEO.astro'
import SeriesInfo from '../../components/SeriesInfo.astro'

export async function getStaticPaths() {
  const posts = await getCollection('posts', filterPostCollection)

  return posts.map((post) => {
    return { params: { slug: post.slug } }
  })
}

const { slug } = Astro.params
const post = await getEntry('posts', slug)
const { Content, remarkPluginFrontmatter } = await post.render()
const title = await getPostTitle(post)
const socialImages = await generateSocialImages(title, post.slug)
---

<Layout title={title}>
  <SEO slot="head" post={post} socialImages={socialImages} />
  <PageTitle>{title}</PageTitle>
  <ArticleMeta
    postData={post.data}
    readingTime={remarkPluginFrontmatter.readingTime}
    class="-mt-14 mb-14 text-center"
  />
  {
    post.data.hero ? (
      <div class="-mt-8 mb-8 w-full max-w-[720px] mx-auto rounded overflow-clip shadow">
        <Image
          src={post.data.hero.image}
          alt={post.data.hero.alt}
          width={post.data.hero.image.width / 2}
          loading="eager"
          placeholder="blur"
          densities={[1, 2]}
          quality="min"
          class="max-w-full w-full"
          style={{ aspectRatio: post.data.hero.image.width / post.data.hero.image.height }}
        />
      </div>
    ) : null
  }
  {post.data.series ? <SeriesInfo id={post.data.series.id.id} /> : null}
  <Markdown>
    <Content />
  </Markdown>
</Layout>
