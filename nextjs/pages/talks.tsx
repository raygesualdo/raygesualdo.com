import { GetStaticProps } from 'next'
import Head from 'next/head'
import capitalize from 'lodash/capitalize'
import { getTalks, Talk } from '../lib/talks'
import { intersperse } from '../lib/utils'

type HomeProps = {
  data: Talk[]
}

export default function Home({ data }: HomeProps) {
  return (
    <div>
      <Head>
        <title>RayGesualdo.com</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Talks</h1>

      {data.map((talk) => {
        const { title, abstract, events } = talk

        return (
          <div key={title}>
            <h2>{title}</h2>
            {events.length && (
              <ul>
                {events.map(({ title, ...links }) => (
                  <li key={title}>
                    {title} {renderLinks(links)}
                  </li>
                ))}
              </ul>
            )}
            <p>{abstract}</p>
          </div>
        )
      })}
    </div>
  )
}

const renderLinks = (
  event: Pick<Talk['events'][0], 'code' | 'slides' | 'video'>
) => {
  if (!event.code && !event.slides && !event.video) return null

  return (
    <span>
      (
      {intersperse(
        (['slides', 'video', 'code'] as (keyof typeof event)[])
          .map((key) => {
            if (key in event) {
              const link = event[key]
              return <a href={link}>{capitalize(key)}</a>
            }
          })
          .filter(Boolean),
        (i) => (
          <span key={i}> | </span>
        )
      )}
      )
    </span>
  )
}

export const getStaticProps: GetStaticProps<HomeProps> = async (context) => {
  const data = getTalks()
  return {
    props: {
      data,
    },
  }
}
